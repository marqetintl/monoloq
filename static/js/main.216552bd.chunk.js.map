{"version":3,"sources":["Monoloq/entries/utils.jsx","Monoloq/entries/placeholders.jsx","Monoloq/entries/forms.jsx","Monoloq/entries/Entry.jsx","Monoloq/entries/index.jsx","Monoloq/index.jsx","Monoloq/todos/utils.jsx","Monoloq/settings/index.jsx","../../miq-shared/src/utils.jsx","../../miq-shared/src/components/Modal/index.jsx","../../miq-shared/src/components/inputs/TextareaX/index.jsx","../../miq-shared/src/components/buttons.jsx","reportWebVitals.js","index.jsx"],"names":["LINES","cleanText","value","trim","replace","entriesActions","dispatch","Promise","resolve","payload","localStorage","getItem","JSON","parse","initialState","entries","setItem","stringify","type","entry","getStore","state","newState","slug","status","newEntry","reject","Error","placeholders","EntryInput","props","placeholder","sample","maxLength","required","SubmitButton","className","title","EntryAddForm","useDispatch","useState","text","setText","id","onSubmit","e","preventDefault","uuid","dt","Date","then","onChange","target","EntryUpdateForm","data","onSuccess","Entry","edit","setEdit","onClick","formatTime","date","onClose","onDelete","UpdatePortal","children","header","Icon","XCircle","maxSize","footer","Modal","byDate","Map","EntriesView","useSelector","useEffect","clear","Object","values","forEach","key","formatDateToStr","has","set","get","push","map","Entries","formatDate","note","todos","settings","created","theme","SettingsView","lazy","TodosView","Monoloq","console","log","match","exact","to","role","fallback","path","component","Logo","sitename","reducers","action","TodosReducer","settingsReducer","getDB","todosActions","isDate","items","post","keys","includes","fd","patch","todo","newData","isRequired","item","DOMAIN","window","location","origin","axios","defaults","xsrfCookieName","xsrfHeaderName","headers","create","baseURL","timeout","withCredentials","onUploadProgress","progressEvt","format","weekday","month","day","date_time","Intl","DateTimeFormat","dd","getDate","mm","getMonth","getFullYear","hour","minute","getClassName","df","Array","isArray","i","filter","Boolean","join","name","Portal","ReactDOM","createPortal","document","body","fullscreen","propTypes","PropTypes","node","TextareaX","forwardRef","require","ref","rest","style","IconButton","label","height","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appReducer","combineReducers","middleware","thunk","enhancers","applyMiddleware","IS_DEV","__REDUX_DEVTOOLS_EXTENSION__","f","appStore","createStore","compose","render","StrictMode","store","getElementById"],"mappings":"0VAEMA,EAAQ,oBAEDC,EAAY,SAACC,GAEtB,OADIA,IAAOA,EAAQA,EAAMC,OAAOC,QAAQJ,EAAO,SACxCE,GAGEG,EACH,kBAAM,SAACC,GAAD,OACR,IAAIC,SAAQ,SAACC,GACT,IAAIC,EAAUC,aAAaC,QAAQ,WASnC,OARKF,EAIDA,EAAUG,KAAKC,MAAMJ,IAHrBA,EAAUK,EAAaC,QACvBL,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUR,KAKnDH,EAAS,CAAEY,KAAM,cAAeT,YACzBD,EAAQC,QAZdJ,EAeH,SAACc,GAAD,OAAW,SAACb,EAAUc,GAAX,OACb,IAAIb,SAAQ,SAACC,GACT,IAAMa,EAAQD,IAAWL,QACnBO,EAAQ,2BAAQD,GAAR,4BAAmBF,EAAMI,MAASJ,IAChDT,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUK,IAE/ChB,EAAS,CAAEY,KAAM,cAAeT,QAASa,IAEzCd,EAAQ,2BAAKW,GAAN,IAAaK,OAAQ,UAvB3BnB,EA0BF,SAACkB,EAAME,GAAP,OAAoB,SAACnB,EAAUc,GAAX,OACvB,IAAIb,SAAQ,SAACC,EAASkB,GAClB,IAAML,EAAQD,IAAWL,QACrBI,EAAQE,EAAME,GAClB,IAAKJ,EAAO,OAAOO,EAAO,IAAIC,MAAJ,uBAA0BJ,EAA1B,OAE1BJ,EAAK,2BAAQA,GAAUM,GACvB,IAAMH,EAAQ,2BAAQD,GAAR,4BAAmBE,GAASJ,IAC1CT,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUK,IAE/ChB,EAAS,CAAEY,KAAM,cAAeT,QAASa,IAEzCd,EAAQ,2BAAKW,GAAN,IAAaK,OAAQ,UAtC3BnB,EAwCD,SAACkB,GAAD,OAAU,SAACjB,EAAUc,GAAX,OACd,IAAIb,SAAQ,SAACC,EAASkB,GAClB,IAAMjB,EAAUW,IAAWL,eACpBN,EAAQc,GACfb,aAAaM,QAAQ,UAAWJ,KAAKK,UAAUR,IAE/CH,EAAS,CAAEY,KAAM,cAAeT,YAChCD,EAAQ,CAAEe,OAAMC,OAAQ,S,eC/CrBI,EATM,CACjB,6BACA,yBACA,mCACA,sBACA,wBACA,qC,OCOEC,EAAa,SAACC,GAChB,MAA4DA,EAApDC,mBAAR,MAHyBC,iBAAOJ,GAGhC,IAA4DE,EAApBG,iBAAxC,MAAoD,IAApD,EAEA,OAAO,cAAC,IAAD,2BAAeH,GAAf,IAA4BC,cAAaE,YAAaC,UAAQ,MAGnEC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACjB,qBAAKA,UAAWA,EAAhB,SACI,wBAAQlB,KAAK,SAASkB,UAAU,MAAMC,MAAM,SAA5C,SACI,cAAC,IAAD,CAAeD,UAAU,kBAKtB,SAASE,EAAaR,GACjC,IAAMxB,EAAWiC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OACI,qBAAKC,GAAG,eAAR,SACI,uBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBAEF,IAAMrC,EAAU,CAAEc,KAAMwB,cAAQN,KAAMxC,EAAUwC,GAAOO,GAAI,IAAIC,MAC/D3C,EAASD,EAAoBI,IAAUyC,MAAK,YAAgB,EAAb1B,QAG3CkB,EAAQ,QAMsBN,UAAU,mBAAxC,UACI,qBAAKA,UAAU,yBAAf,SACI,cAAC,EAAD,CAAYlC,MAAOuC,EAAMU,SAAU,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAOlD,YAG/D,cAAC,EAAD,CAAckC,UAAU,iCAMjC,IAAMiB,EAAkB,SAAC,GAA6B,IAAD,IAA1BC,YAA0B,MAAnB,GAAmB,EAAZxB,EAAY,wBAClDxB,EAAWiC,cACjB,EAAwBC,mBAASc,EAAKb,MAAQ,IAA9C,mBAAOA,EAAP,KAAaC,EAAb,KAEA,IAAKY,EAAK/B,KAAM,OAAO,KAevB,OACI,qBAAKoB,GAAG,kBAAR,SACI,uBAAMC,SAfO,SAACC,GAGlB,GAFAA,EAAEC,iBAEEL,IAASa,EAAKb,KAAlB,CAEA,IAAMhC,EAAO,2BAAQ6C,GAAR,IAAcb,KAAMxC,EAAUwC,KAC3CnC,EAASD,EAAqBiD,EAAK/B,KAAMd,IAAUyC,MAAK,YACpD,GADoE,EAAb1B,OAGvD,OAAIM,EAAMyB,UAAkBzB,EAAMyB,UAAU9C,QAA5C,OAM8B2B,UAAU,mBAAxC,UACI,qBAAKA,UAAU,yBAAf,SACI,cAAC,EAAD,CAAYlC,MAAOuC,EAAMU,SAAU,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAOlD,YAG/D,cAAC,EAAD,CAAckC,UAAU,kC,QCzEzB,SAASoB,EAAT,GAAmD,IAAD,IAAjCF,YAAiC,MAA1B,GAA0B,EAAtBhD,EAAsB,EAAtBA,SACvC,GAD6D,mCACrCkC,oBAAS,IAAjC,mBAAOiB,EAAP,KAAaC,EAAb,KASA,OACI,qCACI,sBAAKtB,UAAU,QAAQuB,QAAS,kBAAMD,GAAQ,IAA9C,UACI,qBAAKtB,UAAU,aAAf,SAA6BkB,EAAKb,OAClC,qBAAKL,UAAU,aAAf,SACI,sBAAMA,UAAU,kBAAhB,mBAAsCwB,YAAWN,EAAKO,cAG7DJ,GACG,cAAC,EAAD,CAAcK,QAAS,kBAAMJ,GAAQ,IAAQK,SAhBpC,SAAClB,GAClBA,EAAEC,iBACFxC,EAASD,EAAsBiD,EAAK/B,OAAO2B,MAAK,YAAgB,EAAb1B,WAc3C,SACI,cAAC,EAAD,CAAuB8B,OAAQC,UAAW,kBAAMG,GAAQ,WAO5E,IAAMM,EAAe,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUH,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACjCG,EACF,qBAAK9B,UAAU,GAAf,SACI,qBAAKA,UAAU,cAAcuB,QAASG,EAAtC,SACI,cAAC,IAAD,CAAYK,KAAMC,IAASC,QAAS,SAI1CC,EACF,qBAAKlC,UAAU,WAAf,SACI,qBAAKA,UAAU,cAAcuB,QAASI,EAAtC,sBAKR,OACI,cAAC,IAAD,UACI,cAAC,IAAOQ,MAAR,CAAoBL,SAAQI,SAA5B,SAAuCL,OCxC7CO,G,MAAS,IAAIC,KAEJ,SAASC,EAAY5C,GAChC,IAAMxB,EAAWiC,cACXxB,EAAU4D,aAAY,SAACtD,GAAD,OAAWA,EAAMN,WAqB7C,OAnBA6D,qBAAU,WACNtE,EAASD,OACV,CAACC,IAEJkE,EAAOK,QACPC,OAAOC,OAAOhE,GAASiE,SAAQ,SAACnC,GAC5B,IAAMgB,EAAO,IAAIZ,KAAKJ,EAAEG,IACxBH,EAAC,2BAAQA,GAAR,IAAWgB,SACZ,IAAMoB,EAAMC,YAAgBrB,GAEvBW,EAAOW,IAAIF,IACZT,EAAOY,IAAIH,EAAK,CAAEpB,OAAM9C,QAAS,KAGrC,IAAMuC,EAAOkB,EAAOa,IAAIJ,GACxB3B,EAAKvC,QAAQuE,KAAKzC,GAClB2B,EAAOY,IAAIH,EAAK3B,MAIhB,0BAASX,GAAG,cAAcP,UAAU,UAApC,UACI,qBAAKA,UAAU,eAAf,SACK,YAAIoC,EAAOO,UAAUQ,KAAI,SAACjC,GAAD,OACtB,wBAAC,EAAD,CAAeA,OAAMhD,WAAY2E,IAAG,UAAK3B,EAAKO,aAItD,wBAAQzB,UAAU,kBAAlB,SACI,cAACE,EAAD,SAMhB,IAAMkD,EAAU,SAAC,GAA0C,IAAD,IAAvClC,YAAuC,MAAhC,CAAEvC,QAAS,IAAqB,EAAfT,EAAe,EAAfA,SACvC,OACI,sBAAK8B,UAAU,cAAf,UACI,qBAAKA,UAAU,UAAf,SAA0BqD,YAAWnC,EAAKO,QAE1C,qBAAKzB,UAAU,QAAf,SACKkB,EAAKvC,QAAQwE,KAAI,SAACG,GAAD,OACd,wBAAClC,EAAD,CAAalD,WAAYgD,KAAMoC,EAAMT,IAAKS,EAAKnE,gB,gBC/CtDT,EAAe,CACxBC,QAAS,GACT4E,MAAO,GACPC,SAAU,CACNC,QAAS,KACTC,MAAO,UAITC,EAAeC,gBAAK,kBAAM,2CAC1BC,EAAYD,gBAAK,kBAAM,gCAEd,SAASE,EAAQpE,GAE5B,OADAqE,QAAQC,IAAItE,EAAMuE,OAEd,qBAAK1D,GAAG,UAAUP,UAAU,WAA5B,SACI,sBAAKA,UAAU,sBAAf,UACI,yBAAQA,UAAU,kBAAlB,UACI,8BACI,cAAC,EAAD,MAGJ,sBAAKA,UAAU,2BAAf,UACI,cAAC,IAAD,CAASkE,OAAK,EAACC,GAAI,WAAYnE,UAAU,MAAzC,SACI,cAAC,IAAD,CAAaA,UAAU,eAE3B,cAAC,IAAD,CAASmE,GAAI,iBAAkBnE,UAAU,MAAzC,SACI,cAAC,IAAD,CAAeA,UAAU,eAE7B,cAAC,IAAD,CAASmE,GAAI,qBAAsBnE,UAAU,MAA7C,SACI,cAAC,IAAD,CAAMA,UAAU,qBAK5B,yBAASA,UAAU,gBAAnB,SACI,sBAAMA,UAAU,gBAAgBoE,KAAK,OAArC,SACI,cAAC,WAAD,CAAUC,SAAU,8CAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOH,OAAK,EAACI,KAAK,WAAWC,UAAWjC,IACxC,cAAC,IAAD,CAAOgC,KAAK,gBAAgBC,UAAWV,IACvC,cAAC,IAAD,CAAOS,KAAK,oBAAoBC,UAAWZ,IAC3C,cAAC,IAAD,CAAUQ,GAAG,2BAU7C,IAAMK,EAAO,SAAC,GAAwC,IAAD,IAArCC,gBAAqC,MAA1B,UAA0B,8BACjD,OACI,sBAAKlE,GAAG,OAAOP,UAAU,MAAzB,UACI,cAAC,IAAD,CAAaA,UAAU,aACvB,sBAAMA,UAAU,YAAhB,SAA6ByE,QAK5BC,EAAW,CACpB/F,QLP0B,WAA2C,IAA1CM,EAAyC,uDAAjCP,EAAaC,QAASgG,EAAW,uCAC5D7F,EAAkB6F,EAAlB7F,KAAMT,EAAYsG,EAAZtG,QAEd,OAAQS,GACJ,IAAK,cACD,OAAO,eAAKT,GAEhB,IAAK,gBACD,OAAO,eAAKK,EAAaC,SAE7B,QACI,OAAO,eAAKM,KKHpBsE,MAAOqB,IACPpB,SAAUqB,oB,sJCvERC,EAAQ,WAAoB,IAAnBjC,EAAkB,uDAAZ,QACbU,EAAQjF,aAAaC,QAAQsE,GACjC,OAAKU,EAKE/E,KAAKC,MAAM8E,IAJdA,EAAQ7E,IAAamE,GACrBvE,aAAaM,QAAQiE,EAAKrE,KAAKK,UAAU0E,IAClCA,IAKFwB,EAAe,CACxB3C,OAAQ,SAACX,GAAD,OAAU,SAACvD,GAAD,OACd,IAAIC,SAAQ,SAACC,GACJ4G,iBAAOvD,KAAOA,EAAO,IAAIZ,MAE9B,IAAM0C,EAAQuB,EAAM,SAEdjC,EAAMC,YAAgBrB,GACtBwD,EAAQ1B,EAAMV,GACpB,OAAKoC,GAIL/G,EAAS,CAAEY,KAAM,eAAgBT,QAAQ,eAAIwE,EAAMoC,KAC5C7G,EAAQ6G,IAJJ7G,EAAQ,SAO3B8G,KAAM,SAACpH,GAAD,OAAW,SAACI,GAAD,OACb,IAAIC,SAAQ,SAACC,GACT,IAAMwC,EAAK,IAAIC,KAETgC,EAAMC,YAAgBlC,GACtB2C,EAAQuB,EAAM,SACfpC,OAAOyC,KAAK5B,GAAO6B,SAASvC,KAC7BU,EAAMV,GAAO,IAGjB,IAAMwC,EAAK,CAAElG,KAAMwB,cAAQ7C,QAAO8C,MAClC2C,EAAMV,GAAKK,KAAKmC,GAEhB/G,aAAaM,QAAQ,QAASJ,KAAKK,UAAU0E,IAC7CrF,EAAS,CAAEY,KAAM,eAAgBT,QAAQ,eAAIwE,EAAMU,EAAMV,MACzDzE,EAAQ,CAAEgB,OAAQ,SAG1BkG,MACI,SAACC,GAAD,IAAOC,EAAP,uDAAiBC,YAAW,iBAA5B,OACA,SAACvH,GAAD,OACI,IAAIC,SAAQ,SAACC,EAASkB,GAClB,IAAQH,EAAaoG,EAAbpG,KAAMyB,EAAO2E,EAAP3E,GACRiC,EAAMC,YAAgB,IAAIjC,KAAKD,IACrC,IAAKiC,EAAK,OAAOvD,EAAO,IAAIC,MAAM,iBAElC,IAAMgE,EAAQuB,EAAM,SACpB,IAAKpC,OAAOyC,KAAK5B,GAAO6B,SAASvC,GAC7B,OAAOvD,EAAO,IAAIC,MAAM,iBAG5B,IAAI0F,EAAQ1B,EAAMV,GAAKM,KAAI,SAACuC,GACxB,OAAIA,EAAKvG,OAASA,EACP,2BAAKuG,GAASF,GAElBE,KAGXnC,EAAMV,GAAOoC,EACb3G,aAAaM,QAAQ,QAASJ,KAAKK,UAAU0E,IAC7CrF,EAAS,CAAEY,KAAM,eAAgBT,QAAQ,eAAIwE,EAAMoC,KACnD7G,EAAQ,CAAEgB,OAAQ,UAIrBwF,EAAe,WAA8C,IAA7C3F,EAA4C,uDAApCP,IAAa6E,MAAOoB,EAAgB,uDAAP,GACtD7F,EAAuB6F,EAAvB7F,KAAR,EAA+B6F,EAAjBtG,eAAd,MAAwB,GAAxB,EAEA,OAAQS,GACJ,IAAK,YACD,OAAO,eAAKT,GAEhB,IAAK,eACD,OAAO,2BAAKY,GAAUZ,GAE1B,QACI,OAAO,eAAKY,M,gKCrFT,SAAS0E,EAAajE,GACjC,OAAO,2CAGJ,IAAMmF,EAAkB,WAAiD,IAAhD5F,EAA+C,uDAAvCP,IAAa8E,SAAUmB,EAAgB,uDAAP,GAC5D7F,EAAuB6F,EAAvB7F,KAAR,EAA+B6F,EAAjBtG,eAAd,MAAwB,GAAxB,EAEA,OAAQS,GACJ,IAAK,iBACD,OAAO,eAAKG,GAEhB,IAAK,YACD,OAAO,2BAAKA,GAAUZ,GAE1B,QACI,OAAOY,K,+aCXN0G,G,MAAe,UAAgCC,OAAOC,SAASC,SAI5EC,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAChCH,IAAMC,SAASG,QAAQ,gBAAkB,2BACzCJ,IAAMC,SAASG,QAAQjB,KAAK,gBAAkB,mBAE1Ba,IAAMK,OAAO,CAC7BC,QAASV,EACTW,QAAS,IACTC,iBAAiB,EACjBJ,QAAS,CAAE,mBAAoB,kBAC/BK,iBAAkB,SAACC,OALhB,IAYMpD,EAAa,SAAC5B,GAAwE,IAAlEiF,EAAiE,uDAAxD,CAAEC,QAAS,QAASC,MAAO,OAAQC,IAAK,WACxEC,EAAY,IAAIC,KAAKC,eAAe,QAAxB,eACXN,IAQP,OAAOI,EAAUJ,OAAO,IAAI7F,KAAKY,KAGxBqB,EAAkB,SAACrB,GAC5B,IAAKuD,iBAAOvD,GAAO,MAAO,GAE1B,IAAIwF,EAAKxF,EAAKyF,UACVC,EAAK1F,EAAK2F,WAAa,EAU3B,OAPIH,EAAK,KACLA,EAAK,IAAMA,GAEXE,EAAK,KACLA,EAAK,IAAMA,GANJ1F,EAAK4F,cASF,IAAMF,EAAK,IAAMF,GAGtBzF,EAAa,SAACC,GAA2D,IAArDiF,EAAoD,uDAA3C,CAAEY,KAAM,UAAWC,OAAQ,WAC3DT,EAAY,IAAIC,KAAKC,eAAe,QAAxB,eAAsCN,IACxD,OAAOI,EAAUJ,OAAO,IAAI7F,KAAKY,KAsCxB+F,EAAe,WAAc,IAClCxH,EADqByH,EAAY,uDAAP,GAQ9B,OANIC,MAAMC,QAAQF,KACdzH,EAAYyH,EACPtE,KAAI,SAACyE,GAAD,OAAOA,GAAC,UAAOA,MACnBC,OAAOC,SACPC,KAAK,MAEP/H,GAMEyF,EAAa,WAAqB,IAApBuC,EAAmB,uDAAZ,QAC9B,MAAM,IAAIzI,MAAJ,UAAayI,EAAb,kB,eCzGGC,EAAS,SAAC,GAAkB,IAAhBpG,EAAe,EAAfA,SACrB,OAAOqG,IAASC,aAAatG,EAAUuG,SAASC,OAGpDJ,EAAO9F,MAGQ,YAA8D,IAA7C5B,EAA4C,EAA5CA,GAAIuB,EAAwC,EAAxCA,OAAQD,EAAgC,EAAhCA,SAAUK,EAAsB,EAAtBA,OAAQoG,EAAc,EAAdA,WAC1D,OACI,sBAAK/H,GAAIA,EAAIP,UAAU,kBAAvB,UACI,qBAAKA,UAAU,qBACf,qBAAKA,UAAU,cAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,sBACIA,UAAWwH,EAAa,CACpB,sBACAc,GAAc,mCAHtB,UAMKxG,GAAU,qBAAK9B,UAAU,eAAf,SAA+B8B,IAC1C,qBAAK9B,UAAU,aAAf,SAA6B6B,IAC5BK,GAAU,qBAAKlC,UAAU,eAAf,SAA+BkC,eAhBlE+F,EAAOM,UAAY,CAAE1G,SAAU2G,IAAUC,KAAKhD,Y,YC4B/BiD,G,OAjBGC,EAnBKC,EAAQ,GAAvBD,aAmBqB,SAACjJ,EAAOmJ,GACjC,IAAQtI,EAAmEb,EAAnEa,GAAIzC,EAA+D4B,EAA/D5B,MAAOiD,EAAwDrB,EAAxDqB,SAAnB,EAA2ErB,EAA9CC,mBAA7B,MAA2C,mBAA3C,EAAkEmJ,EAAlE,YAA2EpJ,EAA3E,yCACMqJ,EAAQrJ,EAAMqJ,MAEpB,OACI,sBAAKxI,GAAIA,EAAIP,UAAWwH,EAAa,CAAC,cAAtC,UACI,sBAAMxH,UAAU,mBAAyB+I,QAAzC,mBAAsDjL,EAAtD,QAEA,qBAAKkC,UAAU,kBAAf,SACI,oDAAc8I,GAAd,IAA0BhL,QAAOiD,WAAUpB,cAAaoJ,QAASF,IAAKA,cCtBzEG,G,MAAa,SAAC,GAA+B,IAA7BjH,EAA4B,EAA5BA,KAAMkH,EAAsB,EAAtBA,MAAUvJ,EAAY,gCAC7CuC,EAAqBvC,EAArBuC,QAAY6G,EAApB,YAA6BpJ,EAA7B,aACA,OAAKqC,EAGD,iDAAQ9B,MAAOgJ,GAAWH,GAA1B,IAAgC9I,UAAWwH,EAAa,CAAC,aAAc9H,EAAMM,YAA7E,UACI,cAAC+B,EAAD,CAAM/B,UAAU,OAAOkJ,OAAQjH,EAASkH,MAAOlH,IAC9CgH,GAAS,sBAAMjJ,UAAU,QAAhB,SAAyBiJ,QALzB,O,+QCDPG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxI,MAAK,YAAkD,IAA/CyI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCMRO,EAAaC,YAAgB,eAAKnF,MAIlCoF,EAAa,CAACC,KAEhBC,EAAY,CAACC,IAAe,WAAf,EAAmBH,IAChCI,WACAF,EAAS,sBACFA,GADE,CAELpE,OAAOuE,6BAA+BvE,OAAOuE,+BAAiC,SAACC,GAAD,OAAOA,MAItF,IAAMC,EAAWC,YAAYV,EAAYlL,IAAc6L,IAAO,WAAP,cAAWP,KAIzE9B,IAASsC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUC,MAAOL,EAAjB,SACI,cAAC,IAAD,UAIZjC,SAASuC,eAAe,SAM5BvB,M","file":"static/js/main.216552bd.chunk.js","sourcesContent":["import { initialState } from \"..\";\n\nconst LINES = /(\\n|\\r|\\r\\n){2,}/g;\n\nexport const cleanText = (value) => {\n    if (value) value = value.trim().replace(LINES, \"\\n\\n\");\n    return value;\n};\n\nexport const entriesActions = {\n    list: () => (dispatch) =>\n        new Promise((resolve) => {\n            let payload = localStorage.getItem(\"entries\");\n            if (!payload) {\n                payload = initialState.entries;\n                localStorage.setItem(\"entries\", JSON.stringify(payload));\n            } else {\n                payload = JSON.parse(payload);\n            }\n\n            dispatch({ type: \"SET_ENTRIES\", payload });\n            return resolve(payload);\n        }),\n\n    post: (entry) => (dispatch, getStore) =>\n        new Promise((resolve) => {\n            const state = getStore().entries;\n            const newState = { ...state, [`${entry.slug}`]: entry };\n            localStorage.setItem(\"entries\", JSON.stringify(newState));\n\n            dispatch({ type: \"SET_ENTRIES\", payload: newState });\n\n            resolve({ ...entry, status: 1 });\n        }),\n\n    patch: (slug, newEntry) => (dispatch, getStore) =>\n        new Promise((resolve, reject) => {\n            const state = getStore().entries;\n            let entry = state[slug];\n            if (!entry) return reject(new Error(`Invalid slug ${slug}.`));\n\n            entry = { ...entry, ...newEntry };\n            const newState = { ...state, [`${slug}`]: entry };\n            localStorage.setItem(\"entries\", JSON.stringify(newState));\n\n            dispatch({ type: \"SET_ENTRIES\", payload: newState });\n\n            resolve({ ...entry, status: 1 });\n        }),\n    delete: (slug) => (dispatch, getStore) =>\n        new Promise((resolve, reject) => {\n            const payload = getStore().entries;\n            delete payload[slug];\n            localStorage.setItem(\"entries\", JSON.stringify(payload));\n\n            dispatch({ type: \"SET_ENTRIES\", payload });\n            resolve({ slug, status: 1 });\n        }),\n    clear: () => (dispatch) =>\n        new Promise((resolve) => {\n            localStorage.setItem(\"entries\", JSON.stringify(initialState.entries));\n            dispatch({ type: \"CLEAR_ENTRIES\" });\n            resolve({ status: 1 });\n        }),\n    export: () => {},\n};\n\nexport const entriesReducer = (state = initialState.entries, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case \"SET_ENTRIES\":\n            return { ...payload };\n\n        case \"CLEAR_ENTRIES\":\n            return { ...initialState.entries };\n\n        default:\n            return { ...state };\n    }\n};\n","const placeholders = [\n    \"What are your thoughts ...\",\n    \"What are you up to ...\",\n    \"How are you feeling right now ?!\",\n    \"How happy are you ?\",\n    \"Are you stressed out?\",\n    \"Are you worried about the future?\",\n];\n\nexport default placeholders;\n","import React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { sample } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\n\nimport { entriesActions, cleanText } from \"./utils\";\n\nimport { TextareaX } from \"@miq/shared\";\nimport { ArrowUpCircle } from \"react-bootstrap-icons\";\nimport placeholders from \"./placeholders\";\n\nconst getPlaceholder = () => sample(placeholders);\n\nconst EntryInput = (props) => {\n    const { placeholder = getPlaceholder(), maxLength = 280 } = props;\n\n    return <TextareaX {...props} {...{ placeholder, maxLength }} required />;\n};\n\nconst SubmitButton = ({ className }) => (\n    <div className={className}>\n        <button type=\"submit\" className=\"btn\" title=\"Submit\">\n            <ArrowUpCircle className=\"btn-icon\" />\n        </button>\n    </div>\n);\n\nexport default function EntryAddForm(props) {\n    const dispatch = useDispatch();\n    const [text, setText] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const payload = { slug: uuid(), text: cleanText(text), dt: new Date() };\n        dispatch(entriesActions.post(payload)).then(({ status }) => {\n            if (!status) return;\n\n            setText(\"\");\n        });\n    };\n\n    return (\n        <div id=\"EntryAddForm\">\n            <form onSubmit={handleSubmit} className=\"entries-add-form\">\n                <div className=\"entries-add-form-input\">\n                    <EntryInput value={text} onChange={(e) => setText(e.target.value)} />\n                </div>\n\n                <SubmitButton className=\"entries-add-form-submit\" />\n            </form>\n        </div>\n    );\n}\n\nexport const EntryUpdateForm = ({ data = {}, ...props }) => {\n    const dispatch = useDispatch();\n    const [text, setText] = useState(data.text || \"\");\n\n    if (!data.slug) return null;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (text === data.text) return;\n\n        const payload = { ...data, text: cleanText(text) };\n        dispatch(entriesActions.patch(data.slug, payload)).then(({ status }) => {\n            if (!status) return;\n\n            if (props.onSuccess) return props.onSuccess(payload);\n        });\n    };\n\n    return (\n        <div id=\"EntryUpdateForm\">\n            <form onSubmit={handleSubmit} className=\"entries-upd-form\">\n                <div className=\"entries-upd-form-input\">\n                    <EntryInput value={text} onChange={(e) => setText(e.target.value)} />\n                </div>\n\n                <SubmitButton className=\"entries-upd-form-submit\" />\n            </form>\n        </div>\n    );\n};\n","import React, { useState } from \"react\";\nimport { formatTime, IconButton } from \"@miq/shared\";\n\nimport { Portal } from \"@miq/shared\";\nimport { entriesActions } from \"./utils\";\nimport { EntryUpdateForm } from \"./forms\";\nimport { XCircle } from \"react-bootstrap-icons\";\n\nexport default function Entry({ data = {}, dispatch, ...props }) {\n    const [edit, setEdit] = useState(false);\n\n    const handleDelete = (e) => {\n        e.preventDefault();\n        dispatch(entriesActions.delete(data.slug)).then(({ status }) => {\n            if (!status) return;\n        });\n    };\n\n    return (\n        <>\n            <div className=\"entry\" onClick={() => setEdit(true)}>\n                <div className=\"entry-text\">{data.text}</div>\n                <div className=\"entry-meta\">\n                    <span className=\"entry-meta-time\">{`${formatTime(data.date)}`}</span>\n                </div>\n            </div>\n            {edit && (\n                <UpdatePortal onClose={() => setEdit(false)} onDelete={handleDelete}>\n                    <EntryUpdateForm {...{ data }} onSuccess={() => setEdit(false)} />\n                </UpdatePortal>\n            )}\n        </>\n    );\n}\n\nconst UpdatePortal = ({ children, onClose, onDelete }) => {\n    const header = (\n        <div className=\"\">\n            <div className=\"CloseButton\" onClick={onClose}>\n                <IconButton Icon={XCircle} maxSize={24} />\n            </div>\n        </div>\n    );\n    const footer = (\n        <div className=\"bg-white\">\n            <div className=\"CloseButton\" onClick={onDelete}>\n                Delete\n            </div>\n        </div>\n    );\n    return (\n        <Portal>\n            <Portal.Modal {...{ header, footer }}>{children}</Portal.Modal>\n        </Portal>\n    );\n};\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport EntryAddForm from \"./forms\";\nimport { entriesActions } from \"./utils\";\n\nimport { formatDate, formatDateToStr } from \"@miq/shared\";\n\nimport Entry from \"./Entry\";\n\nimport \"./scss/main.scss\";\n\nconst byDate = new Map();\n\nexport default function EntriesView(props) {\n    const dispatch = useDispatch();\n    const entries = useSelector((state) => state.entries);\n\n    useEffect(() => {\n        dispatch(entriesActions.list());\n    }, [dispatch]);\n\n    byDate.clear();\n    Object.values(entries).forEach((e) => {\n        const date = new Date(e.dt);\n        e = { ...e, date };\n        const key = formatDateToStr(date);\n\n        if (!byDate.has(key)) {\n            byDate.set(key, { date, entries: [] });\n        }\n\n        const data = byDate.get(key);\n        data.entries.push(e);\n        byDate.set(key, data);\n    });\n\n    return (\n        <section id=\"EntriesView\" className=\"entries\">\n            <div className=\"entries-days\">\n                {[...byDate.values()].map((data) => (\n                    <Entries {...{ data, dispatch }} key={`${data.date}`} />\n                ))}\n            </div>\n\n            <footer className=\"viewport-footer\">\n                <EntryAddForm />\n            </footer>\n        </section>\n    );\n}\n\nconst Entries = ({ data = { entries: [] }, dispatch }) => {\n    return (\n        <div className=\"entries-day\">\n            <div className=\"weekday\">{formatDate(data.date)}</div>\n\n            <div className=\"items\">\n                {data.entries.map((note) => (\n                    <Entry {...{ dispatch }} data={note} key={note.slug} />\n                ))}\n            </div>\n        </div>\n    );\n};\n","import { lazy, Suspense } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { CardChecklist, Gear, JournalPlus, JournalText } from \"react-bootstrap-icons\";\n\nimport \"./scss/main.scss\";\n\nimport EntriesView from \"./entries\";\nimport { entriesReducer } from \"./entries/utils\";\nimport { settingsReducer } from \"./settings\";\nimport { TodosReducer } from \"./todos/utils\";\n\nexport const initialState = {\n    entries: {},\n    todos: {},\n    settings: {\n        created: null,\n        theme: \"light\",\n    },\n};\n\nconst SettingsView = lazy(() => import(\"./settings\"));\nconst TodosView = lazy(() => import(\"./todos\"));\n\nexport default function Monoloq(props) {\n    console.log(props.match);\n    return (\n        <div id=\"Monoloq\" className=\"viewport\">\n            <div className=\"mn viewport-content\">\n                <header className=\"viewport-header\">\n                    <div>\n                        <Logo />\n                    </div>\n\n                    <div className=\"viewport-header-navlinks\">\n                        <NavLink exact to={\"/monoloq\"} className=\"btn\">\n                            <JournalPlus className=\"btn-icon\" />\n                        </NavLink>\n                        <NavLink to={\"/monoloq/todo/\"} className=\"btn\">\n                            <CardChecklist className=\"btn-icon\" />\n                        </NavLink>\n                        <NavLink to={\"/monoloq/settings/\"} className=\"btn\">\n                            <Gear className=\"btn-icon\" />\n                        </NavLink>\n                    </div>\n                </header>\n\n                <section className=\"viewport-body\">\n                    <main className=\"viewport-main\" role=\"main\">\n                        <Suspense fallback={<div>loading ...</div>}>\n                            <Switch>\n                                <Route exact path=\"/monoloq\" component={EntriesView} />\n                                <Route path=\"/monoloq/todo\" component={TodosView} />\n                                <Route path=\"/monoloq/settings\" component={SettingsView} />\n                                <Redirect to=\"/monoloq\" />\n                            </Switch>\n                        </Suspense>\n                    </main>\n                </section>\n            </div>\n        </div>\n    );\n}\n\nconst Logo = ({ sitename = \"Monoloq\", ...props }) => {\n    return (\n        <div id=\"Logo\" className=\"btn\">\n            <JournalText className=\"btn-icon\" />\n            <span className=\"btn-label\">{sitename}</span>\n        </div>\n    );\n};\n\nexport const reducers = {\n    entries: entriesReducer,\n    todos: TodosReducer,\n    settings: settingsReducer,\n};\n","import { v4 as uuid } from \"uuid\";\nimport { formatDateToStr, isRequired } from \"@miq/shared\";\nimport { isDate } from \"lodash\";\nimport { initialState } from \"..\";\n\nconst getDB = (key = \"todos\") => {\n    let todos = localStorage.getItem(key);\n    if (!todos) {\n        todos = initialState[key];\n        localStorage.setItem(key, JSON.stringify(todos));\n        return todos;\n    }\n    return JSON.parse(todos);\n};\n\nexport const todosActions = {\n    byDate: (date) => (dispatch) =>\n        new Promise((resolve) => {\n            if (!isDate(date)) date = new Date();\n\n            const todos = getDB(\"todos\");\n\n            const key = formatDateToStr(date);\n            const items = todos[key];\n            if (!items) {\n                return resolve({});\n            }\n\n            dispatch({ type: \"UPDATE_TODOS\", payload: { [key]: items } });\n            return resolve(items);\n        }),\n\n    post: (value) => (dispatch) =>\n        new Promise((resolve) => {\n            const dt = new Date();\n\n            const key = formatDateToStr(dt);\n            const todos = getDB(\"todos\");\n            if (!Object.keys(todos).includes(key)) {\n                todos[key] = [];\n            }\n\n            const fd = { slug: uuid(), value, dt };\n            todos[key].push(fd);\n\n            localStorage.setItem(\"todos\", JSON.stringify(todos));\n            dispatch({ type: \"UPDATE_TODOS\", payload: { [key]: todos[key] } });\n            resolve({ status: 1 });\n        }),\n\n    patch:\n        (todo, newData = isRequired(\"data required\")) =>\n        (dispatch) =>\n            new Promise((resolve, reject) => {\n                const { slug, dt } = todo;\n                const key = formatDateToStr(new Date(dt));\n                if (!key) return reject(new Error(\"Invalid date\"));\n\n                const todos = getDB(\"todos\");\n                if (!Object.keys(todos).includes(key)) {\n                    return reject(new Error(\"Invalid date\"));\n                }\n\n                let items = todos[key].map((item) => {\n                    if (item.slug === slug) {\n                        return { ...item, ...newData };\n                    }\n                    return item;\n                });\n\n                todos[key] = items;\n                localStorage.setItem(\"todos\", JSON.stringify(todos));\n                dispatch({ type: \"UPDATE_TODOS\", payload: { [key]: items } });\n                resolve({ status: 1 });\n            }),\n};\n\nexport const TodosReducer = (state = initialState.todos, action = {}) => {\n    const { type, payload = {} } = action;\n\n    switch (type) {\n        case \"SET_TODOS\":\n            return { ...payload };\n\n        case \"UPDATE_TODOS\":\n            return { ...state, ...payload };\n\n        default:\n            return { ...state };\n    }\n};\n\n// class Todo {\n//     text = \"\";\n//     dt_start = null;\n//     dt_end = null;\n//     every = null;\n//     repeat = [\"never\", \"day\", \"week\", \"2week\", \"month\", \"year\", \"custom\"];\n//     frequency = [\n//         { day: \"hours\" },\n//         { week: \"weekdays\" },\n//         { month: \"days-date\" },\n//         { year: \"months\" },\n//     ];\n//     constructor(kwargs = {}) {\n//         Object.assign(this, kwargs);\n//     }\n// }\n","import React from \"react\";\nimport { initialState } from \"..\";\n\nexport default function SettingsView(props) {\n    return <div>settings</div>;\n}\n\nexport const settingsReducer = (state = initialState.settings, action = {}) => {\n    const { type, payload = {} } = action;\n\n    switch (type) {\n        case \"RESET_SETTINGS\":\n            return { ...state };\n\n        case \"SET_THEME\":\n            return { ...state, ...payload };\n\n        default:\n            return state;\n    }\n};\n","import axios from \"axios\";\nimport { isDate } from \"lodash\";\n\nimport \"./scss/main.scss\";\n\nexport const IS_DEV = process.env.NODE_ENV !== \"production\";\n\nexport const DOMAIN = IS_DEV ? `http://127.0.0.1:8000` : `${window.location.origin}`;\n\n// AXIOS\n\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.headers[\"Content-Type\"] = \"text/html; charset=UTF-8\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nexport const HTTP = axios.create({\n    baseURL: DOMAIN,\n    timeout: 3000,\n    withCredentials: true, // To enable cookies\n    headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n    onUploadProgress: (progressEvt) => {\n        // console.log(Math.round(progressEvt.loaded / progressEvt.total * 100) + '%')\n    },\n});\n\n// DATE HELPERS\n\nexport const formatDate = (date, format = { weekday: \"short\", month: \"long\", day: \"numeric\" }) => {\n    const date_time = new Intl.DateTimeFormat(\"en-US\", {\n        ...format,\n        //    weekday: \"short\",\n        //    month: \"long\",\n        //    day: \"numeric\",\n        // hour: \"numeric\",\n        // minute: \"numeric\",\n        // year: 'numeric',\n    });\n    return date_time.format(new Date(date));\n};\n\nexport const formatDateToStr = (date) => {\n    if (!isDate(date)) return \"\";\n\n    var dd = date.getDate();\n    var mm = date.getMonth() + 1; //January is 0!\n    var yyyy = date.getFullYear();\n\n    if (dd < 10) {\n        dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n        mm = \"0\" + mm;\n    }\n\n    return yyyy + \"-\" + mm + \"-\" + dd;\n};\n\nexport const formatTime = (date, format = { hour: \"numeric\", minute: \"numeric\" }) => {\n    const date_time = new Intl.DateTimeFormat(\"en-US\", { ...format });\n    return date_time.format(new Date(date));\n};\n\n// HELPERS\n\nexport const getSharedData = () =>\n    new Promise(async (resolve, reject) => {\n        let sharedData = document.getElementById(\"sharedData\");\n\n        if (!sharedData && IS_DEV) {\n            // This will not run in production\n            console.log(`Getting page shared data in ${process.env.NODE_ENV} mode`);\n\n            const base = new URL(window.location.href);\n            const path = `${base.pathname}${base.search}`;\n\n            let res;\n            try {\n                res = await HTTP.get(path);\n            } catch (err) {\n                return reject(err);\n            }\n\n            if (!res || res.status !== 200) return reject(\"No data\");\n\n            if (res.headers[\"content-type\"].includes(\"text\")) {\n                const parser = new DOMParser();\n                const doc = parser.parseFromString(res.data, \"text/html\");\n                sharedData = doc.getElementById(\"sharedData\");\n            }\n        }\n        if (sharedData) {\n            return resolve(JSON.parse(sharedData.textContent));\n        }\n\n        return resolve({});\n    });\n\nexport const getClassName = (df = []) => {\n    let className;\n    if (Array.isArray(df)) {\n        className = df\n            .map((i) => i && `${i}`)\n            .filter(Boolean)\n            .join(\" \");\n    }\n    return className;\n};\n\nexport const addForwardSlash = (str = isRequired(\"string param\")) =>\n    str.endsWith(\"/\") ? str : `${str}/`;\n\nexport const isRequired = (name = \"Param\") => {\n    throw new Error(`${name} is required`);\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { getClassName } from \"../../utils\";\n\nimport \"./modal.scss\";\n\nexport const Portal = ({ children }) => {\n    return ReactDOM.createPortal(children, document.body);\n};\n\nPortal.Modal = Modal;\nPortal.propTypes = { children: PropTypes.node.isRequired };\n\nexport default function Modal({ id, header, children, footer, fullscreen }) {\n    return (\n        <div id={id} className=\"modal-container\">\n            <div className=\"modal-background\" />\n            <div className=\"modal-inner\">\n                <div className=\"modal-content\">\n                    <div\n                        className={getClassName([\n                            \"modal-content-inner\",\n                            fullscreen && \"modal-content-inner-fullscreen\",\n                        ])}\n                    >\n                        {header && <div className=\"modal-header\">{header}</div>}\n                        <div className=\"modal-body\">{children}</div>\n                        {footer && <div className=\"modal-footer\">{footer}</div>}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nModal.propTypes = {\n    id: PropTypes.string,\n    fullscreen: PropTypes.bool,\n\n    header: PropTypes.node,\n    children: PropTypes.node.isRequired,\n    footer: PropTypes.node,\n};\n","import PropTypes from \"prop-types\";\n\nimport \"./textareax.scss\";\nimport { getClassName } from \"../../../utils\";\n\nconst { forwardRef } = require(\"react\");\n\nconst propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    ref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.any })]),\n\n    value: PropTypes.string,\n    required: PropTypes.bool,\n\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onKeyUp: PropTypes.func,\n\n    style: PropTypes.object,\n    placeholder: PropTypes.string,\n};\n\nconst TextareaX = forwardRef((props, ref) => {\n    const { id, value, onChange, placeholder = \"Start typing ...\", ...rest } = props;\n    const style = props.style;\n\n    return (\n        <div id={id} className={getClassName([\"textareax\"])}>\n            <span className=\"textareax-mirror\" {...{ style }}>{`${value}\\n`}</span>\n\n            <div className=\"textareax-input\">\n                <textarea {...rest} {...{ value, onChange, placeholder, style }} ref={ref} />\n            </div>\n        </div>\n    );\n});\n\nTextareaX.propTypes = propTypes;\n\nexport default TextareaX;\n","import PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\nimport { getClassName } from \"../utils\";\n\nconst propTypes = {\n    label: PropTypes.string,\n    title: PropTypes.string,\n    maxSize: PropTypes.number,\n    Icon: PropTypes.object.isRequired,\n};\n\nexport const IconButton = ({ Icon, label, ...props }) => {\n    const { maxSize, ...rest } = props;\n    if (!Icon) return null;\n\n    return (\n        <button title={label} {...rest} className={getClassName([\"IconButton\", props.className])}>\n            <Icon className=\"Icon\" height={maxSize} width={maxSize} />\n            {label && <span className=\"Label\">{label}</span>}\n        </button>\n    );\n};\nIconButton.propTypes = propTypes;\n\nexport const IconNavLink = ({ Icon, label, ...props }) => {\n    if (!Icon || !props.to) return null;\n\n    return (\n        <NavLink {...props} className={getClassName([\"IconButton\", props.className])}>\n            <Icon className=\"Icon\" />\n            {label && <span className=\"Label\">{label}</span>}\n        </NavLink>\n    );\n};\nIconNavLink.propTypes = propTypes;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\n\nimport App, { reducers, initialState } from \"./Monoloq\";\nimport { IS_DEV } from \"./utils\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst appReducer = combineReducers({ ...reducers });\n\n// ==> STORE\n\nconst middleware = [thunk];\n\nlet enhancers = [applyMiddleware(...middleware)];\nif (IS_DEV) {\n    enhancers = [\n        ...enhancers,\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,\n    ];\n}\n\nexport const appStore = createStore(appReducer, initialState, compose(...enhancers));\n\n// ==>  ROOT\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={appStore}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}