{"version":3,"sources":["utils.jsx","Monoloq/entries/utils.jsx","Monoloq/ui/textareax/src/index.jsx","Monoloq/entries/placeholders.jsx","Monoloq/entries/forms.jsx","Monoloq/entries/Entry.jsx","Monoloq/entries/index.jsx","Monoloq/index.jsx","Monoloq/settings/index.jsx","reportWebVitals.js","index.jsx"],"names":["IS_DEV","process","formatTime","date","format","hour","minute","date_time","Intl","DateTimeFormat","Date","formatDate","weekday","month","day","formatDateToStr","dd","getDate","mm","getMonth","getFullYear","LINES","entriesActions","dispatch","Promise","resolve","payload","localStorage","getItem","JSON","parse","initialState","entries","setItem","stringify","type","entry","getStore","state","newState","slug","status","TextareaX","forwardRef","require","props","ref","value","onChange","placeholder","rest","style","className","id","placeholders","EntryInput","sample","maxLength","required","EntryAddForm","useDispatch","useState","text","setText","onSubmit","e","preventDefault","uuid","trim","replace","dt","then","target","title","Entry","data","byDate","Map","EntriesView","useSelector","useEffect","clear","Object","values","forEach","key","has","set","get","push","map","Entries","note","settings","created","theme","SettingsView","lazy","Monoloq","role","fallback","path","component","Logo","sitename","reducers","action","settingsReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","appReducer","combineReducers","middleware","thunk","enhancers","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","appStore","createStore","compose","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.9488fe50.chunk.js","sourcesContent":["export const IS_DEV = process.env.NODE_ENV !== \"production\";\n\nexport const formatTime = (date, format = { hour: \"numeric\", minute: \"numeric\" }) => {\n    const date_time = new Intl.DateTimeFormat(\"en-US\", { ...format });\n    return date_time.format(new Date(date));\n};\n\nexport const formatDate = (date, format = { weekday: \"short\", month: \"long\", day: \"numeric\" }) => {\n    const date_time = new Intl.DateTimeFormat(\"en-US\", {\n        ...format,\n        //    weekday: \"short\",\n        //    month: \"long\",\n        //    day: \"numeric\",\n        // hour: \"numeric\",\n        // minute: \"numeric\",\n        // year: 'numeric',\n    });\n    return date_time.format(new Date(date));\n};\n\nexport const formatDateToStr = (date) => {\n    // if (!isDate(date)) return \"\";\n\n    var dd = date.getDate();\n    var mm = date.getMonth() + 1; //January is 0!\n    var yyyy = date.getFullYear();\n\n    if (dd < 10) {\n        dd = \"0\" + dd;\n    }\n    if (mm < 10) {\n        mm = \"0\" + mm;\n    }\n\n    return yyyy + \"-\" + mm + \"-\" + dd;\n};\n","import { initialState } from \"..\";\n\nconst LINES = /(\\n|\\r|\\r\\n){2,}/g;\n\nexport const cleanText = (value) => {\n    if (value) value = value.trim().replace(LINES, \"\\n\\n\");\n    return value;\n};\n\nexport const entriesActions = {\n    list: () => (dispatch) =>\n        new Promise((resolve) => {\n            let payload = localStorage.getItem(\"entries\");\n            if (!payload) {\n                payload = initialState.entries;\n                localStorage.setItem(\"entries\", JSON.stringify(payload));\n            } else {\n                payload = JSON.parse(payload);\n            }\n\n            dispatch({ type: \"SET_ENTRIES\", payload });\n            return resolve(payload);\n        }),\n\n    post: (entry) => (dispatch, getStore) =>\n        new Promise((resolve) => {\n            const state = getStore().entries;\n            const newState = { ...state, [`${entry.slug}`]: entry };\n            localStorage.setItem(\"entries\", JSON.stringify(newState));\n\n            dispatch({ type: \"SET_ENTRIES\", payload: newState });\n\n            resolve({ ...entry, status: 1 });\n        }),\n};\n\nexport const entriesReducer = (state = initialState.entries, action) => {\n    const { type, payload } = action;\n\n    switch (type) {\n        case \"SET_ENTRIES\":\n            return { ...payload };\n\n        case \"CLEAR_ENTRIES\":\n            return { ...initialState.entries };\n\n        default:\n            return { ...state };\n    }\n};\n","import \"./style.scss\";\nimport PropTypes from \"prop-types\";\n\nconst { forwardRef } = require(\"react\");\n\nconst propTypes = {\n    id: PropTypes.string,\n    className: PropTypes.string,\n    ref: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({ current: PropTypes.any })]),\n\n    value: PropTypes.string,\n    required: PropTypes.bool,\n\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onKeyUp: PropTypes.func,\n\n    style: PropTypes.object,\n    placeholder: PropTypes.string,\n};\n\nconst TextareaX = forwardRef((props, ref) => {\n    const { value, onChange, placeholder = \"Start typing ...\", ...rest } = props;\n    const style = props.style;\n\n    return (\n        <div className=\"TextareaX\">\n            <span id=\"Mirror\" {...{ style }}>{`${value}\\n`}</span>\n\n            <div className=\"Input\">\n                <textarea {...rest} {...{ value, onChange, placeholder, style }} ref={ref} />\n            </div>\n        </div>\n    );\n});\n\nTextareaX.propTypes = propTypes;\n\nexport default TextareaX;\n","const placeholders = [\n    \"What are your thoughts ...\",\n    \"What are you up to ...\",\n    \"How are you feeling right now ?!\",\n    \"How happy are you ?\",\n    \"Are you stressed out?\",\n    \"Are you worried about the future?\",\n];\n\nexport default placeholders;\n","import React, { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { sample } from \"lodash\";\nimport { useDispatch } from \"react-redux\";\n\nimport { entriesActions, cleanText } from \"./utils\";\n\nimport TextareaX from \"../ui/textareax/src\";\nimport { ArrowUpCircle } from \"react-bootstrap-icons\";\nimport placeholders from \"./placeholders\";\n\nconst getPlaceholder = () => sample(placeholders);\n\nconst EntryInput = (props) => {\n    const { placeholder = getPlaceholder(), maxLength = 280 } = props;\n\n    return <TextareaX {...props} {...{ placeholder, maxLength }} required />;\n};\n\nexport default function EntryAddForm(props) {\n    const dispatch = useDispatch();\n    const [text, setText] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const payload = { slug: uuid(), text: cleanText(text), dt: new Date() };\n        dispatch(entriesActions.post(payload)).then(({ status }) => {\n            if (!status) return;\n\n            setText(\"\");\n        });\n    };\n\n    return (\n        <div id=\"EntryAddForm\">\n            <form onSubmit={handleSubmit} className=\"entries-add-form\">\n                <div className=\"entries-add-form-input\">\n                    <EntryInput value={text} onChange={(e) => setText(e.target.value)} />\n                </div>\n\n                <div className=\"entries-add-form-submit\">\n                    <button type=\"submit\" className=\"btn\" title=\"Submit\">\n                        <ArrowUpCircle className=\"btn-icon\" />\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { formatTime } from \"../../utils\";\n\nexport default function Entry({ data = {}, ...props }) {\n    return (\n        <div className=\"entry\">\n            <div className=\"entry-text\">{data.text}</div>\n            <div className=\"entry-meta\">\n                <span className=\"entry-meta-time\">{`${formatTime(data.date)}`}</span>\n            </div>\n        </div>\n    );\n}\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport EntryAddForm from \"./forms\";\nimport { entriesActions } from \"./utils\";\n\nimport { formatDate, formatDateToStr } from \"../../utils\";\nimport Entry from \"./Entry\";\n\nimport \"./scss/main.scss\";\n\nconst byDate = new Map();\n\nexport default function EntriesView(props) {\n    const dispatch = useDispatch();\n    const entries = useSelector((state) => state.entries);\n\n    useEffect(() => {\n        dispatch(entriesActions.list());\n    }, [dispatch]);\n\n    byDate.clear();\n    Object.values(entries).forEach((e) => {\n        const date = new Date(e.dt);\n        e = { ...e, date };\n        const key = formatDateToStr(date);\n\n        if (!byDate.has(key)) {\n            byDate.set(key, { date, entries: [] });\n        }\n\n        const data = byDate.get(key);\n        data.entries.push(e);\n        byDate.set(key, data);\n    });\n\n    return (\n        <section id=\"EntriesView\" className=\"entries\">\n            <div className=\"entries-days\">\n                {[...byDate.values()].map((data) => (\n                    <Entries {...{ data, dispatch }} key={`${data.date}`} />\n                ))}\n            </div>\n\n            <footer className=\"entries-footer\">\n                <EntryAddForm />\n            </footer>\n        </section>\n    );\n}\n\nconst Entries = ({ data = { entries: [] }, dispatch }) => {\n    return (\n        <div className=\"entries-day\">\n            <div className=\"weekday\">{formatDate(data.date)}</div>\n\n            <div className=\"items\">\n                {data.entries.map((note) => (\n                    <Entry {...{ dispatch }} data={note} key={note.slug} />\n                ))}\n            </div>\n        </div>\n    );\n};\n","import { lazy, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router\";\nimport EntriesView from \"./entries\";\nimport { entriesReducer } from \"./entries/utils\";\nimport { settingsReducer } from \"./settings\";\n\nimport { JournalText } from \"react-bootstrap-icons\";\n\nimport \"./scss/main.scss\";\n\nexport const initialState = {\n    entries: {},\n    settings: {\n        created: null,\n        theme: \"light\",\n    },\n};\n\nconst SettingsView = lazy(() => import(\"./settings\"));\n\nexport default function Monoloq(props) {\n    return (\n        <div id=\"Monoloq\">\n            <div className=\"mn\">\n                <header className=\"mn-header\">\n                    <Logo />\n                </header>\n\n                <section className=\"mn-body\">\n                    <main className=\"mn-main\" role=\"main\">\n                        <Suspense fallback={<div>loading ...</div>}>\n                            <Switch>\n                                <Route path=\"/settings/\" component={SettingsView} />\n                                <Route path=\"/\" component={EntriesView} />\n                            </Switch>\n                        </Suspense>\n                    </main>\n                    {/* <footer className=\"mn-footer\">footer</footer> */}\n                </section>\n            </div>\n        </div>\n    );\n}\n\nconst Logo = ({ sitename = \"Monoloq\", ...props }) => {\n    return (\n        <div id=\"Logo\" className=\"btn\">\n            <JournalText className=\"btn-icon\" />\n            <span className=\"btn-label\">{sitename}</span>\n        </div>\n    );\n};\n\nexport const reducers = {\n    entries: entriesReducer,\n    settings: settingsReducer,\n};\n","import React from \"react\";\nimport { initialState } from \"..\";\n\nexport default function SettingsView() {\n    return <div>settings</div>;\n}\n\nexport const settingsReducer = (state = initialState.settings, action = {}) => {\n    const { type, payload = {} } = action;\n\n    switch (type) {\n        case \"RESET_SETTINGS\":\n            return { ...state };\n\n        case \"SET_THEME\":\n            return { ...state, ...payload };\n\n        default:\n            return state;\n    }\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\n\nimport App, { reducers, initialState } from \"./Monoloq\";\nimport { IS_DEV } from \"./utils\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst appReducer = combineReducers({ ...reducers });\n\n// ==> STORE\n\nconst middleware = [thunk];\n\nlet enhancers = [applyMiddleware(...middleware)];\nif (IS_DEV) {\n    enhancers = [\n        ...enhancers,\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f,\n    ];\n}\n\nexport const appStore = createStore(appReducer, initialState, compose(...enhancers));\n\n// ==>  ROOT\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Provider store={appStore}>\n                <App />\n            </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}